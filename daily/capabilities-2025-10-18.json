{
  "config": {
    "configFile": "/home/runner/work/mny-platform/mny-platform/playwright.config.ts",
    "rootDir": "/home/runner/work/mny-platform/mny-platform/tests/e2e",
    "forbidOnly": true,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "ci": {
        "commitHref": "https://github.com/peterdsimonson/mny-platform/commit/6ae64a8017216db6031aef951b6d8a0c7f4c760c",
        "commitHash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
        "buildHref": "https://github.com/peterdsimonson/mny-platform/actions/runs/18610073929"
      },
      "gitCommit": {
        "shortHash": "6ae64a8",
        "hash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
        "subject": "feat(adaptive): implement shadow mode for safe rule testing (#79)",
        "body": "feat(adaptive): implement shadow mode for safe rule testing (#79)\n\nImplement ChatGPT's shadow mode recommendation - test rules before enforcing.\n\nWhat is Shadow Mode:\n- New learned rules start in 'shadow' mode\n- Run on every PR but never block merge\n- Report 'would have failed' (data collection)\n- After verification, manually promote to 'enforce'\n- Then rule actually blocks failing PRs\n\nChanges:\n\n1. Updated learned-rules.json schema:\n   - Added 'mode' field (shadow or enforce)\n   - Added 'shadow_failures' counter\n   - Current rules: Both in shadow (safe default)\n\n2. Updated scripts/preflight.sh:\n   - Reads mode from learned-rules.json\n   - Shadow: runs but doesn't block\n   - Enforce: blocks on failure\n   - Clear labeling in output\n\n3. Updated scripts/run-adaptive-checks.sh:\n   - Respects shadow vs enforce mode\n   - Fixed subshell issue (process substitution)\n   - Proper exit code handling\n\n4. Updated scripts/telemetry/nightly_miner.ts:\n   - New promotions start in shadow mode\n   - Tracks shadow vs enforce status\n   - Console output shows mode transitions\n   - Deactivation logic for stale rules\n\n5. Documentation:\n   - telemetry/signatures/SHADOW-MODE.md\n   - Complete explanation of lifecycle\n   - Examples and manual promotion process\n\nBenefits:\n- ✅ Safe experimentation with new rules\n- ✅ No risk of bad rules breaking pipeline\n- ✅ Collect data on rule effectiveness\n- ✅ Manual review before enforcement\n- ✅ LTDD-compliant (fail-forward, test in production)\n\nTesting:\n```bash\n$ bash scripts/run-adaptive-checks.sh\n▶ Running learned check: wrong_host_signature [SHADOW MODE]\n✅ Passed\n▶ Running learned check: broken_pipe [SHADOW MODE]\n✅ Passed\n✅ All learned checks passed (or in shadow mode)\n```\n\nTonight's Miner Run:\n- New patterns (backend_ts_error, etc.) will promote\n- All start in SHADOW mode (safe)\n- Will report but not block\n- After review: manually promote worthy rules to enforce\n\nThis implements ChatGPT's Phase B (HARDEN) recommendation.\n\nAI-Tool: Cursor + ChatGPT\nChatGPT-Plan: Shadow mode for safe adaptation\nEvidence: Tested locally, works correctly",
        "author": {
          "name": "peterdsimonson",
          "email": "117416316+peterdsimonson@users.noreply.github.com",
          "time": 1760737687000
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "time": 1760737687000
        },
        "branch": "main"
      },
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "json"
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/runner/work/mny-platform/mny-platform/test-results",
        "repeatEach": 1,
        "retries": 2,
        "metadata": {
          "ci": {
            "commitHref": "https://github.com/peterdsimonson/mny-platform/commit/6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "commitHash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "buildHref": "https://github.com/peterdsimonson/mny-platform/actions/runs/18610073929"
          },
          "gitCommit": {
            "shortHash": "6ae64a8",
            "hash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "subject": "feat(adaptive): implement shadow mode for safe rule testing (#79)",
            "body": "feat(adaptive): implement shadow mode for safe rule testing (#79)\n\nImplement ChatGPT's shadow mode recommendation - test rules before enforcing.\n\nWhat is Shadow Mode:\n- New learned rules start in 'shadow' mode\n- Run on every PR but never block merge\n- Report 'would have failed' (data collection)\n- After verification, manually promote to 'enforce'\n- Then rule actually blocks failing PRs\n\nChanges:\n\n1. Updated learned-rules.json schema:\n   - Added 'mode' field (shadow or enforce)\n   - Added 'shadow_failures' counter\n   - Current rules: Both in shadow (safe default)\n\n2. Updated scripts/preflight.sh:\n   - Reads mode from learned-rules.json\n   - Shadow: runs but doesn't block\n   - Enforce: blocks on failure\n   - Clear labeling in output\n\n3. Updated scripts/run-adaptive-checks.sh:\n   - Respects shadow vs enforce mode\n   - Fixed subshell issue (process substitution)\n   - Proper exit code handling\n\n4. Updated scripts/telemetry/nightly_miner.ts:\n   - New promotions start in shadow mode\n   - Tracks shadow vs enforce status\n   - Console output shows mode transitions\n   - Deactivation logic for stale rules\n\n5. Documentation:\n   - telemetry/signatures/SHADOW-MODE.md\n   - Complete explanation of lifecycle\n   - Examples and manual promotion process\n\nBenefits:\n- ✅ Safe experimentation with new rules\n- ✅ No risk of bad rules breaking pipeline\n- ✅ Collect data on rule effectiveness\n- ✅ Manual review before enforcement\n- ✅ LTDD-compliant (fail-forward, test in production)\n\nTesting:\n```bash\n$ bash scripts/run-adaptive-checks.sh\n▶ Running learned check: wrong_host_signature [SHADOW MODE]\n✅ Passed\n▶ Running learned check: broken_pipe [SHADOW MODE]\n✅ Passed\n✅ All learned checks passed (or in shadow mode)\n```\n\nTonight's Miner Run:\n- New patterns (backend_ts_error, etc.) will promote\n- All start in SHADOW mode (safe)\n- Will report but not block\n- After review: manually promote worthy rules to enforce\n\nThis implements ChatGPT's Phase B (HARDEN) recommendation.\n\nAI-Tool: Cursor + ChatGPT\nChatGPT-Plan: Shadow mode for safe adaptation\nEvidence: Tested locally, works correctly",
            "author": {
              "name": "peterdsimonson",
              "email": "117416316+peterdsimonson@users.noreply.github.com",
              "time": 1760737687000
            },
            "committer": {
              "name": "GitHub",
              "email": "noreply@github.com",
              "time": 1760737687000
            },
            "branch": "main"
          },
          "actualWorkers": 1
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/runner/work/mny-platform/mny-platform/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/runner/work/mny-platform/mny-platform/test-results",
        "repeatEach": 1,
        "retries": 2,
        "metadata": {
          "ci": {
            "commitHref": "https://github.com/peterdsimonson/mny-platform/commit/6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "commitHash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "buildHref": "https://github.com/peterdsimonson/mny-platform/actions/runs/18610073929"
          },
          "gitCommit": {
            "shortHash": "6ae64a8",
            "hash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "subject": "feat(adaptive): implement shadow mode for safe rule testing (#79)",
            "body": "feat(adaptive): implement shadow mode for safe rule testing (#79)\n\nImplement ChatGPT's shadow mode recommendation - test rules before enforcing.\n\nWhat is Shadow Mode:\n- New learned rules start in 'shadow' mode\n- Run on every PR but never block merge\n- Report 'would have failed' (data collection)\n- After verification, manually promote to 'enforce'\n- Then rule actually blocks failing PRs\n\nChanges:\n\n1. Updated learned-rules.json schema:\n   - Added 'mode' field (shadow or enforce)\n   - Added 'shadow_failures' counter\n   - Current rules: Both in shadow (safe default)\n\n2. Updated scripts/preflight.sh:\n   - Reads mode from learned-rules.json\n   - Shadow: runs but doesn't block\n   - Enforce: blocks on failure\n   - Clear labeling in output\n\n3. Updated scripts/run-adaptive-checks.sh:\n   - Respects shadow vs enforce mode\n   - Fixed subshell issue (process substitution)\n   - Proper exit code handling\n\n4. Updated scripts/telemetry/nightly_miner.ts:\n   - New promotions start in shadow mode\n   - Tracks shadow vs enforce status\n   - Console output shows mode transitions\n   - Deactivation logic for stale rules\n\n5. Documentation:\n   - telemetry/signatures/SHADOW-MODE.md\n   - Complete explanation of lifecycle\n   - Examples and manual promotion process\n\nBenefits:\n- ✅ Safe experimentation with new rules\n- ✅ No risk of bad rules breaking pipeline\n- ✅ Collect data on rule effectiveness\n- ✅ Manual review before enforcement\n- ✅ LTDD-compliant (fail-forward, test in production)\n\nTesting:\n```bash\n$ bash scripts/run-adaptive-checks.sh\n▶ Running learned check: wrong_host_signature [SHADOW MODE]\n✅ Passed\n▶ Running learned check: broken_pipe [SHADOW MODE]\n✅ Passed\n✅ All learned checks passed (or in shadow mode)\n```\n\nTonight's Miner Run:\n- New patterns (backend_ts_error, etc.) will promote\n- All start in SHADOW mode (safe)\n- Will report but not block\n- After review: manually promote worthy rules to enforce\n\nThis implements ChatGPT's Phase B (HARDEN) recommendation.\n\nAI-Tool: Cursor + ChatGPT\nChatGPT-Plan: Shadow mode for safe adaptation\nEvidence: Tested locally, works correctly",
            "author": {
              "name": "peterdsimonson",
              "email": "117416316+peterdsimonson@users.noreply.github.com",
              "time": 1760737687000
            },
            "committer": {
              "name": "GitHub",
              "email": "noreply@github.com",
              "time": 1760737687000
            },
            "branch": "main"
          },
          "actualWorkers": 1
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/home/runner/work/mny-platform/mny-platform/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/runner/work/mny-platform/mny-platform/test-results",
        "repeatEach": 1,
        "retries": 2,
        "metadata": {
          "ci": {
            "commitHref": "https://github.com/peterdsimonson/mny-platform/commit/6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "commitHash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "buildHref": "https://github.com/peterdsimonson/mny-platform/actions/runs/18610073929"
          },
          "gitCommit": {
            "shortHash": "6ae64a8",
            "hash": "6ae64a8017216db6031aef951b6d8a0c7f4c760c",
            "subject": "feat(adaptive): implement shadow mode for safe rule testing (#79)",
            "body": "feat(adaptive): implement shadow mode for safe rule testing (#79)\n\nImplement ChatGPT's shadow mode recommendation - test rules before enforcing.\n\nWhat is Shadow Mode:\n- New learned rules start in 'shadow' mode\n- Run on every PR but never block merge\n- Report 'would have failed' (data collection)\n- After verification, manually promote to 'enforce'\n- Then rule actually blocks failing PRs\n\nChanges:\n\n1. Updated learned-rules.json schema:\n   - Added 'mode' field (shadow or enforce)\n   - Added 'shadow_failures' counter\n   - Current rules: Both in shadow (safe default)\n\n2. Updated scripts/preflight.sh:\n   - Reads mode from learned-rules.json\n   - Shadow: runs but doesn't block\n   - Enforce: blocks on failure\n   - Clear labeling in output\n\n3. Updated scripts/run-adaptive-checks.sh:\n   - Respects shadow vs enforce mode\n   - Fixed subshell issue (process substitution)\n   - Proper exit code handling\n\n4. Updated scripts/telemetry/nightly_miner.ts:\n   - New promotions start in shadow mode\n   - Tracks shadow vs enforce status\n   - Console output shows mode transitions\n   - Deactivation logic for stale rules\n\n5. Documentation:\n   - telemetry/signatures/SHADOW-MODE.md\n   - Complete explanation of lifecycle\n   - Examples and manual promotion process\n\nBenefits:\n- ✅ Safe experimentation with new rules\n- ✅ No risk of bad rules breaking pipeline\n- ✅ Collect data on rule effectiveness\n- ✅ Manual review before enforcement\n- ✅ LTDD-compliant (fail-forward, test in production)\n\nTesting:\n```bash\n$ bash scripts/run-adaptive-checks.sh\n▶ Running learned check: wrong_host_signature [SHADOW MODE]\n✅ Passed\n▶ Running learned check: broken_pipe [SHADOW MODE]\n✅ Passed\n✅ All learned checks passed (or in shadow mode)\n```\n\nTonight's Miner Run:\n- New patterns (backend_ts_error, etc.) will promote\n- All start in SHADOW mode (safe)\n- Will report but not block\n- After review: manually promote worthy rules to enforce\n\nThis implements ChatGPT's Phase B (HARDEN) recommendation.\n\nAI-Tool: Cursor + ChatGPT\nChatGPT-Plan: Shadow mode for safe adaptation\nEvidence: Tested locally, works correctly",
            "author": {
              "name": "peterdsimonson",
              "email": "117416316+peterdsimonson@users.noreply.github.com",
              "time": 1760737687000
            },
            "committer": {
              "name": "GitHub",
              "email": "noreply@github.com",
              "time": 1760737687000
            },
            "branch": "main"
          },
          "actualWorkers": 1
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/home/runner/work/mny-platform/mny-platform/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.56.0",
    "workers": 1,
    "webServer": {
      "command": "cd apps/home && pnpm dev",
      "url": "http://localhost:3000",
      "reuseExistingServer": false
    }
  },
  "suites": [
    {
      "title": "lock_capability_matrix.spec.ts",
      "file": "lock_capability_matrix.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Capability Matrix (Lock Tests)",
          "file": "lock_capability_matrix.spec.ts",
          "line": 26,
          "column": 6,
          "specs": [
            {
              "title": "Fast Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 1710,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Fast Mode Response Time: 1688ms\n"
                        },
                        {
                          "text": "Fast Mode Answer Length: 2212 chars\n"
                        },
                        {
                          "text": "Fast Mode Citations: 1 (kinds: library)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:01.601Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "6bd38550f1cf3422273d-b6b4f626aaa18137a73a",
              "file": "lock_capability_matrix.spec.ts",
              "line": 30,
              "column": 7
            },
            {
              "title": "Research Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Research mode not implemented yet",
                      "location": {
                        "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                        "line": 75,
                        "column": 12
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 52,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:03.340Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Research mode not implemented yet",
                          "location": {
                            "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                            "line": 75,
                            "column": 12
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "6bd38550f1cf3422273d-a748c0579e9faa46b989",
              "file": "lock_capability_matrix.spec.ts",
              "line": 59,
              "column": 7
            },
            {
              "title": "Hybrid Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Hybrid mode not implemented yet",
                      "location": {
                        "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                        "line": 159,
                        "column": 12
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 36,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:03.413Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Hybrid mode not implemented yet",
                          "location": {
                            "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                            "line": 159,
                            "column": 12
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "6bd38550f1cf3422273d-3c5e23ee7c8138021f36",
              "file": "lock_capability_matrix.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "Backend health check MUST pass",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 41,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:03.475Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "6bd38550f1cf3422273d-1158f0b6bc3c99daf197",
              "file": "lock_capability_matrix.spec.ts",
              "line": 215,
              "column": 7
            },
            {
              "title": "Fast Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 101,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Fast Mode Response Time: 77ms\n"
                        },
                        {
                          "text": "Fast Mode Answer Length: 2212 chars\n"
                        },
                        {
                          "text": "Fast Mode Citations: 1 (kinds: library)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:04.166Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "6bd38550f1cf3422273d-67046a8c87bb50f6a897",
              "file": "lock_capability_matrix.spec.ts",
              "line": 30,
              "column": 7
            },
            {
              "title": "Research Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Research mode not implemented yet",
                      "location": {
                        "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                        "line": 75,
                        "column": 12
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 34,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:04.297Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Research mode not implemented yet",
                          "location": {
                            "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                            "line": 75,
                            "column": 12
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "6bd38550f1cf3422273d-f0c4cef695f2748331a7",
              "file": "lock_capability_matrix.spec.ts",
              "line": 59,
              "column": 7
            },
            {
              "title": "Hybrid Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Hybrid mode not implemented yet",
                      "location": {
                        "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                        "line": 159,
                        "column": 12
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 35,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:04.362Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Hybrid mode not implemented yet",
                          "location": {
                            "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                            "line": 159,
                            "column": 12
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "6bd38550f1cf3422273d-71685b475cdbcc43734b",
              "file": "lock_capability_matrix.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "Backend health check MUST pass",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 39,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:04.414Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "6bd38550f1cf3422273d-e2736b6c38cf03aa6d7d",
              "file": "lock_capability_matrix.spec.ts",
              "line": 215,
              "column": 7
            },
            {
              "title": "Fast Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 116,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Fast Mode Response Time: 89ms\n"
                        },
                        {
                          "text": "Fast Mode Answer Length: 2212 chars\n"
                        },
                        {
                          "text": "Fast Mode Citations: 1 (kinds: library)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:05.100Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "6bd38550f1cf3422273d-0f26c2648672e238a79f",
              "file": "lock_capability_matrix.spec.ts",
              "line": 30,
              "column": 7
            },
            {
              "title": "Research Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Research mode not implemented yet",
                      "location": {
                        "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                        "line": 75,
                        "column": 12
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 44,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:05.243Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Research mode not implemented yet",
                          "location": {
                            "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                            "line": 75,
                            "column": 12
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "6bd38550f1cf3422273d-be038be97cbd99f3b307",
              "file": "lock_capability_matrix.spec.ts",
              "line": 59,
              "column": 7
            },
            {
              "title": "Hybrid Mode contract MUST hold",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Hybrid mode not implemented yet",
                      "location": {
                        "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                        "line": 159,
                        "column": 12
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 41,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:05.316Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Hybrid mode not implemented yet",
                          "location": {
                            "file": "/home/runner/work/mny-platform/mny-platform/tests/e2e/lock_capability_matrix.spec.ts",
                            "line": 159,
                            "column": 12
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "6bd38550f1cf3422273d-912143b860236c5f2eaf",
              "file": "lock_capability_matrix.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "Backend health check MUST pass",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 46,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-18T03:28:05.374Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "6bd38550f1cf3422273d-8dbb526be8cf525a27d9",
              "file": "lock_capability_matrix.spec.ts",
              "line": 215,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-18T03:27:59.014Z",
    "duration": 6457.024,
    "expected": 6,
    "skipped": 6,
    "unexpected": 0,
    "flaky": 0
  }
}
